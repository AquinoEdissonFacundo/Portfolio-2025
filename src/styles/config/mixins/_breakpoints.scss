@use 'sass:map';

@mixin breakpoint($point, $value: 0) {
  @if $point == sm {
    @media (min-width: map.get($breakpoints, sm)) {
      @content;
    }
  }

  // sass-lint:block-closing-brace-newline-after
  @else if $point == md {
    @media (min-width: map.get($breakpoints, md)) {
      @content;
    }
  }

  // sass-lint:block-closing-brace-newline-after
  @else if $point == lg {
    @media (min-width: map.get($breakpoints, lg)) {
      @content;
    }
  }

  // sass-lint:block-closing-brace-newline-after
  @else if $point == xl {
    @media (min-width: map.get($breakpoints, xl)) {
      @content;
    }
  }

  // sass-lint:block-closing-brace-newline-after

  // Breakpoint: Only Mobile.
  @else if $point == max-md {
    @media (max-width: map.get($breakpoints, md)) {
      @content;
    }
  }

  // Breakpoint: Only Tablet.
  @else if $point == max-lg {
    @media (max-width: map.get($breakpoints, lg)) {
      @content;
    }
  }

  // sass-lint:block-closing-brace-newline-after
  @else {
    @media ($point: $value) {
      @content;
    }
  }
}

@mixin between-breakpoints($min_key, $max_key) {
  @media (min-width: map.get($breakpoints, $min_key)) and (max-width: map.get($breakpoints, $max_key)) {
    @content;
  }
}

@mixin between-breakpoints-widths($min, $max) {
  @media (min-width: $min) and (max-width: $max) {
    @content;
  }
}

/** Usage:
@include breakpoint(tablet) {}
@include breakpoint(min-width, 1192px) {}
@include between-breakpoints(sm, lg) {}
@include between-breakpoints-widths(0, 1024px) {}
**/
